<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpecificWebTargetsForActions />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 15 Localități' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='11'>
        <calculation class='tableau' formula='11' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='Output_proiect (Output_proiect)' inline='true' name='federated.1lvigrw0f78s7013hg1oh1s00cti' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output_proiect' name='excel-direct.1keu73d1f7ldnl1c83f5p0pw6ra7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Business_Intelligence/Proiect/Output_proiect_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1keu73d1f7ldnl1c83f5p0pw6ra7' name='Output_proiect_final' table='[Output_proiect_final$]' type='table'>
          <columns gridOrigin='A1:M461:no:A1:M461:0' header='yes' outcome='2'>
            <column datatype='datetime' date-parse-format='yyyy' name='An' ordinal='0' />
            <column datatype='string' name='Denumire' ordinal='1' />
            <column datatype='string' name='CUI' ordinal='2' />
            <column datatype='string' name='CAEN' ordinal='3' />
            <column datatype='integer' name='Cifra_afaceri_neta' ordinal='4' />
            <column datatype='integer' name='Venituri_totale' ordinal='5' />
            <column datatype='integer' name='Cheltuieli_totale' ordinal='6' />
            <column datatype='integer' name='Profit_net' ordinal='7' />
            <column datatype='integer' name='Pierdere_neta' ordinal='8' />
            <column datatype='integer' name='Numar_mediu_angajati' ordinal='9' />
            <column datatype='string' name='Tara' ordinal='10' />
            <column datatype='string' name='Localitate' ordinal='11' />
            <column datatype='string' name='Judet' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1keu73d1f7ldnl1c83f5p0pw6ra7' name='Output_proiect_final' table='[Output_proiect_final$]' type='table'>
          <columns gridOrigin='A1:M461:no:A1:M461:0' header='yes' outcome='2'>
            <column datatype='datetime' date-parse-format='yyyy' name='An' ordinal='0' />
            <column datatype='string' name='Denumire' ordinal='1' />
            <column datatype='string' name='CUI' ordinal='2' />
            <column datatype='string' name='CAEN' ordinal='3' />
            <column datatype='integer' name='Cifra_afaceri_neta' ordinal='4' />
            <column datatype='integer' name='Venituri_totale' ordinal='5' />
            <column datatype='integer' name='Cheltuieli_totale' ordinal='6' />
            <column datatype='integer' name='Profit_net' ordinal='7' />
            <column datatype='integer' name='Pierdere_neta' ordinal='8' />
            <column datatype='integer' name='Numar_mediu_angajati' ordinal='9' />
            <column datatype='string' name='Tara' ordinal='10' />
            <column datatype='string' name='Localitate' ordinal='11' />
            <column datatype='string' name='Judet' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M461:no:A1:M461:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>An</remote-name>
            <remote-type>7</remote-type>
            <local-name>[An]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>An</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Denumire</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Denumire]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Denumire</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUI</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUI]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>CUI</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CAEN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CAEN]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>CAEN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cifra_afaceri_neta</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cifra_afaceri_neta]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Cifra_afaceri_neta</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Venituri_totale</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Venituri_totale]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Venituri_totale</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cheltuieli_totale</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cheltuieli_totale]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Cheltuieli_totale</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit_net</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit_net]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Profit_net</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pierdere_neta</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pierdere_neta]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Pierdere_neta</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numar_mediu_angajati</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numar_mediu_angajati]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Numar_mediu_angajati</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tara</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tara]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Tara</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Localitate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Localitate]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Localitate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Judet</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Judet]</local-name>
            <parent-name>[Output_proiect_final]</parent-name>
            <remote-alias>Judet</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRO_RRO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
      <column caption='Over_under_Cifra_Afaceri' datatype='string' name='[Calculation_156781577500962816]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Cifra_afaceri_neta])&gt;300000&#13;&#10;THEN &quot;Above 300k&quot;&#13;&#10;ELSE &quot;Below 300k&quot;&#13;&#10;END' />
      </column>
      <column caption='Over_under_Profit' datatype='string' name='[Calculation_156781577502154753]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Profit_net])&gt;40000&#13;&#10;THEN &quot;Profit over 40k&quot;&#13;&#10;ELSE &quot;Profit below 40k&quot;&#13;&#10;END' />
      </column>
      <column caption='Over_under_Nr_angajati' datatype='string' name='[Calculation_156781577503428610]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Numar_mediu_angajati])&gt;=5&#13;&#10;THEN &quot;Above 5 employees&quot;&#13;&#10;ELSE &quot;Below 5 employees&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Judet]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Bihor&quot;' value='&quot;Romania&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
          <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
          <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
          <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
          <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
          <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
          <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
          <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
          <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
          <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
          <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
          <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
          <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
          <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
          <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
          <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
          <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
          <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
          <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
          <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
          <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
          <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
          <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
          <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
          <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
          <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
          <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
          <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
          <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
          <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
          <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
          <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
          <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
          <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
          <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
          <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
          <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
          <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
          <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
          <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
          <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
          <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
          <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
          <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
          <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
          <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
          <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
          <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
          <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
          <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
          <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
          <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
          <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
          <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
          <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
          <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
          <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
          <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
          <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
          <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
          <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
          <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
          <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
          <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
          <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
          <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
          <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
          <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
          <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
          <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
          <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
          <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
          <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
          <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
          <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
          <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
          <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
          <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
          <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
          <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
          <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
          <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
          <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
          <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
          <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
          <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
          <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
          <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
          <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
          <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
          <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
      <column datatype='string' name='[Tara]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Venituri_totale]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Output_proiect_final' datatype='table' name='[__tableau_internal_object_id__].[Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit_net]' derivation='None' name='[none:Profit_net:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Venituri_totale]' derivation='Sum' name='[sum:Venituri_totale:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_156781577502154753]' derivation='User' name='[usr:Calculation_156781577502154753:nk]' pivot='key' type='nominal' />
      <group caption='Action (An,Localitate)' hidden='true' name='[Action (An,Localitate)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[An]' />
          <groupfilter function='level-members' level='[Localitate]' />
        </groupfilter>
      </group>
      <group caption='Action (Judet,Localitate,Tara)' hidden='true' name='[Action (Judet,Localitate,Tara)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Judet]' />
          <groupfilter function='level-members' level='[Localitate]' />
          <groupfilter function='level-members' level='[Tara]' />
        </groupfilter>
      </group>
      <group caption='Action (Localitate)' hidden='true' name='[Action (Localitate)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Localitate]' />
        </groupfilter>
      </group>
      <group caption='Action (Profit_net)' hidden='true' name='[Action (Profit_net)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Profit_net:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Judet, Localitate'>
          <field>[Judet]</field>
          <field>[Localitate]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Localitate:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Borş&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sînmartin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hidișelu de Sus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tăuteu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lăzăreni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salonta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valea lui Mihai&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mihai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chişlaz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Popeşti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bratca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oşorhei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Auşeu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lugașu de Jos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vaşcău&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Diosig&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gepiu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tileagd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crişului&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sârbi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Balc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marghita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cîmpani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Răbăgani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Copăcel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sîntandrei&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Derna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dobreşti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Girișu de Criş&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tarcea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beiuş&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paleu&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oradea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biharia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nojorid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aleşd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iancu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tinca&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Criștioru de Jos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sălacea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bunteşti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pomezeu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aştileu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ineu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toboliu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_156781577502154753:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Profit below 40k&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Profit over 45k&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Profit below 45k&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Profit over 40k&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Romania&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{e03cc75a-8543-492b-95b0-61d2c38409ef}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]' />
            <field name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Output_proiect_final' id='Output!proiect!final_F93C6DD7203C4B6093E0493DAC990EA9'>
            <properties context=''>
              <relation connection='excel-direct.1keu73d1f7ldnl1c83f5p0pw6ra7' name='Output_proiect_final' table='[Output_proiect_final$]' type='table'>
                <columns gridOrigin='A1:M461:no:A1:M461:0' header='yes' outcome='2'>
                  <column datatype='datetime' date-parse-format='yyyy' name='An' ordinal='0' />
                  <column datatype='string' name='Denumire' ordinal='1' />
                  <column datatype='string' name='CUI' ordinal='2' />
                  <column datatype='string' name='CAEN' ordinal='3' />
                  <column datatype='integer' name='Cifra_afaceri_neta' ordinal='4' />
                  <column datatype='integer' name='Venituri_totale' ordinal='5' />
                  <column datatype='integer' name='Cheltuieli_totale' ordinal='6' />
                  <column datatype='integer' name='Profit_net' ordinal='7' />
                  <column datatype='integer' name='Pierdere_neta' ordinal='8' />
                  <column datatype='integer' name='Numar_mediu_angajati' ordinal='9' />
                  <column datatype='string' name='Tara' ordinal='10' />
                  <column datatype='string' name='Localitate' ordinal='11' />
                  <column datatype='string' name='Judet' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Interactivitate1' name='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Interactivitate' name='[Action2_FCC616E428BE425BB558C36C4F5B70C8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Cluster,Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană,Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Web' name='[Action3_A8B3125E62954D74A8B331C298A05112]'>
      <activation type='on-select' />
      <source datasource='federated.1lvigrw0f78s7013hg1oh1s00cti' type='datasource'>
        <exclude-sheet name='Profitul_raportat_la_cifra_de_afaceri_pe_municipii&amp;zona_metropolitana' />
        <exclude-sheet name='Cluster' />
        <exclude-sheet name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' />
        <exclude-sheet name='Profit_raportat_la_nr_mediu_angajati' />
        <exclude-sheet name='Numar_mediu_angajati_Oradea' />
        <exclude-sheet name='Raport_pierdere_neta_profit_net_municipii_pe_an' />
        <exclude-sheet name='Venituri_totale_pe_localitate_pe_an' />
        <exclude-sheet name='Profit_in_fct_de_nr_mediu_angajati' />
        <exclude-sheet name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' />
      </source>
      <link caption='' expression='https://www.cjbihor.ro/despre-bihor/economie/'>
        <url-action-type>browser</url-action-type>
      </link>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Analiza de trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Judet]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Bihor&quot;' value='&quot;Romania&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Pierdere_neta]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[Pierdere_neta]' derivation='Sum' forecast-column-base='[sum:Pierdere_neta:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Pierdere_neta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Sum' forecast-column-base='[sum:Profit_net:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Judet]' derivation='None' name='[none:Judet:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pierdere_neta]' derivation='Sum' name='[sum:Pierdere_neta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[An]' derivation='Month-Trunc' name='[tmn:An:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[fVal:sum:Profit_net:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[fVal:sum:Pierdere_neta:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.1lvigrw0f78s7013hg1oh1s00cti].[fVal:sum:Profit_net:qk] + [federated.1lvigrw0f78s7013hg1oh1s00cti].[fVal:sum:Pierdere_neta:qk])</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[tmn:An:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{98D78A17-5D19-46B8-936A-28A0D9FCABDE}' />
    </worksheet>
    <worksheet name='Cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{e03cc75a-8543-492b-95b0-61d2c38409ef}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Venituri_totale]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Venituri_totale]' derivation='Sum' name='[sum:Venituri_totale:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[An]' />
              <groupfilter function='level-members' level='[Localitate]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]' value='Clustere&#10;'>
              <formatted-text>
                <run>Clustere&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]' />
              <lod column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
              <lod column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]</cols>
      </table>
      <simple-id uuid='{4EDA8157-3811-4F90-8CA0-AC7E3108596A}' />
    </worksheet>
    <worksheet name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Biharia&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Borş&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Nojorid&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Oradea&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Oşorhei&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Sînmartin&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Sîntandrei&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</rows>
        <cols>([federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk] / [federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok])</cols>
      </table>
      <simple-id uuid='{0ACBAD42-FAD4-474A-9758-92E30957E652}' />
    </worksheet>
    <worksheet name='Harta_in_fct_de_media_profitului_net'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Judet]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Bihor&quot;' value='&quot;Romania&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Avg' name='[avg:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Judet]' derivation='None' name='[none:Judet:nk]' pivot='key' type='nominal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[An]' />
              <groupfilter function='level-members' level='[Localitate]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]'>
            <groupfilter function='level-members' level='[Localitate]' user:ui-action-filter='[Action2_FCC616E428BE425BB558C36C4F5B70C8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Longitude (generated)]' field-type='quantitative' max='2592192.8445536364' min='2268902.4170356421' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Latitude (generated)]' field-type='quantitative' max='6071088.8996739592' min='5812590.1500193384' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Latitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='Localitate' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' />
              <lod column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
              <lod column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <_.fcp.Layers.true...pane generated-title='Judet' id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Latitude (generated)]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E6E3249C-7AD7-4B15-AC77-560900E817EB}' />
    </worksheet>
    <worksheet name='Numar_mediu_angajati_Oradea'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Numar_mediu_angajati]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Numar_mediu_angajati]' derivation='Sum' name='[sum:Numar_mediu_angajati:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Municipiul Oradea&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Oradea&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]</cols>
      </table>
      <simple-id uuid='{E54F99A6-8CCC-4A8B-91D3-E79CF1E26FF1}' />
    </worksheet>
    <worksheet name='Profit_in_fct_de_nr_mediu_angajati'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='integer' name='[Numar_mediu_angajati]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Numar_mediu_angajati]' derivation='Sum' name='[sum:Numar_mediu_angajati:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</cols>
      </table>
      <simple-id uuid='{6C89AC7A-AE2C-43BD-B1F2-CAB576B2DC94}' />
    </worksheet>
    <worksheet name='Profit_raportat_la_nr_mediu_angajati'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column caption='Over_under_Profit' datatype='string' name='[Calculation_156781577502154753]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Profit_net])&gt;40000&#13;&#10;THEN &quot;Profit over 40k&quot;&#13;&#10;ELSE &quot;Profit below 40k&quot;&#13;&#10;END' />
            </column>
            <column caption='Over_under_Nr_angajati' datatype='string' name='[Calculation_156781577503428610]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Numar_mediu_angajati])&gt;=5&#13;&#10;THEN &quot;Above 5 employees&quot;&#13;&#10;ELSE &quot;Below 5 employees&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Denumire]' role='dimension' type='nominal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Numar_mediu_angajati]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Avg' name='[avg:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Denumire]' derivation='None' name='[none:Denumire:nk]' pivot='key' type='nominal' />
            <column-instance column='[Numar_mediu_angajati]' derivation='Sum' name='[sum:Numar_mediu_angajati:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_156781577502154753]' derivation='User' name='[usr:Calculation_156781577502154753:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_156781577503428610]' derivation='User' name='[usr:Calculation_156781577503428610:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[An]' />
              <groupfilter function='level-members' level='[Localitate]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]'>
            <groupfilter function='level-members' level='[Localitate]' user:ui-action-filter='[Action2_FCC616E428BE425BB558C36C4F5B70C8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' field-type='quantitative' max='450000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]' field-type='quantitative' max='90' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577503428610:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</rows>
        <cols>([federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk] + [federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk])</cols>
      </table>
      <simple-id uuid='{219A335F-9F20-4233-91D6-FFC0FF030BFE}' />
    </worksheet>
    <worksheet name='Profitul_raportat_la_cifra_de_afaceri_pe_municipii&amp;zona_metropolitana'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column caption='Over_under_Profit' datatype='string' name='[Calculation_156781577502154753]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Profit_net])&gt;40000&#13;&#10;THEN &quot;Profit over 40k&quot;&#13;&#10;ELSE &quot;Profit below 40k&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Cifra_afaceri_neta]' role='measure' type='quantitative' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[Cifra_afaceri_neta]' derivation='Avg' name='[avg:Cifra_afaceri_neta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Avg' name='[avg:Profit_net:qk]' pivot='key' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_156781577502154753]' derivation='User' name='[usr:Calculation_156781577502154753:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]'>
            <groupfilter function='level-members' level='[none:An:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Localitate:nk]' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' />
              <lod column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Cifra_afaceri_neta:qk]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]</cols>
      </table>
      <simple-id uuid='{C5977152-B060-40B4-8E3E-1EE6D6133788}' />
    </worksheet>
    <worksheet name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 15 Localități' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='11'>
              <calculation class='tableau' formula='11' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[An]' />
              <groupfilter function='level-members' level='[Localitate]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]'>
            <groupfilter function='level-members' level='[none:An:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit_net])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Localitate:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
              <size column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]' />
              <text column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Nojorid&quot;</value>
                <value>669999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Paleu&quot;</value>
                <value>306196</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Lăzăreni&quot;</value>
                <value>795548</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Hidișelu de Sus&quot;</value>
                <value>1143560</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Beiuş&quot;</value>
                <value>771752</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Aleşd&quot;</value>
                <value>407373</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Sîntandrei&quot;</value>
                <value>289864</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
                  <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Sînmartin&quot;</value>
                <value>279506</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{A75441F1-566C-46C9-BA1D-5DCDE3060F93}' />
    </worksheet>
    <worksheet name='Raport_pierdere_neta_profit_net_municipii_pe_an'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Pierdere_neta]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit_net]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pierdere_neta]' derivation='Sum' name='[sum:Pierdere_neta:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit_net]' derivation='Sum' name='[sum:Profit_net:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Aleşd&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Beiuş&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Mihai&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Municipiul Beiuş&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Municipiul Marghita&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Municipiul Oradea&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Municipiul Salonta&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Oradea&quot;' />
              <groupfilter function='member' level='[none:Localitate:nk]' member='&quot;Salonta&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' />
              <size column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Pierdere_neta:qk]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</cols>
      </table>
      <simple-id uuid='{57A023B7-381A-4C2E-A5FE-B436A3375C65}' />
    </worksheet>
    <worksheet name='Venituri_totale_pe_localitate_pe_an'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output_proiect (Output_proiect)' name='federated.1lvigrw0f78s7013hg1oh1s00cti' />
          </datasources>
          <datasource-dependencies datasource='federated.1lvigrw0f78s7013hg1oh1s00cti'>
            <column datatype='datetime' name='[An]' role='dimension' semantic-role='' type='ordinal' />
            <column datatype='string' name='[Localitate]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Abram&quot;' value='47.319145567974694' />
                <semantic-value key='&quot;Aleşd&quot;' value='47.06330829648752' />
                <semantic-value key='&quot;Aştileu&quot;' value='47.03114126629081' />
                <semantic-value key='&quot;Auşeu&quot;' value='47.035282378066071' />
                <semantic-value key='&quot;Balc&quot;' value='47.301769742593599' />
                <semantic-value key='&quot;Beiuş&quot;' value='46.671168242623054' />
                <semantic-value key='&quot;Biharia&quot;' value='47.151247911310023' />
                <semantic-value key='&quot;Borş&quot;' value='47.114502410085059' />
                <semantic-value key='&quot;Bratca&quot;' value='46.925989932995201' />
                <semantic-value key='&quot;Bunteşti&quot;' value='46.615333632125591' />
                <semantic-value key='&quot;Chişlaz&quot;' value='47.280080118239511' />
                <semantic-value key='&quot;Cîmpani&quot;' value='46.518976075576518' />
                <semantic-value key='&quot;Copăcel&quot;' value='46.98110049775574' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='46.424865060126386' />
                <semantic-value key='&quot;Crişului&quot;' value='46.984260378283651' />
                <semantic-value key='&quot;Derna&quot;' value='47.204860381486533' />
                <semantic-value key='&quot;Diosig&quot;' value='47.311021141038438' />
                <semantic-value key='&quot;Dobreşti&quot;' value='46.842176977854479' />
                <semantic-value key='&quot;Gepiu&quot;' value='46.928822487433244' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='47.068404121554359' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='46.936342350439951' />
                <semantic-value key='&quot;Holod&quot;' value='46.78824751761892' />
                <semantic-value key='&quot;Iancu&quot;' value='46.67384895797877' />
                <semantic-value key='&quot;Ineu&quot;' value='47.088670759060754' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='46.875263529322062' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='47.064545007177472' />
                <semantic-value key='&quot;Marghita&quot;' value='47.354408964604865' />
                <semantic-value key='&quot;Nojorid&quot;' value='47.002630074594713' />
                <semantic-value key='&quot;Oradea&quot;' value='47.042050000000003' />
                <semantic-value key='&quot;Oşorhei&quot;' value='47.043573583931042' />
                <semantic-value key='&quot;Paleu&quot;' value='47.112239068002289' />
                <semantic-value key='&quot;Pomezeu&quot;' value='46.79982363772185' />
                <semantic-value key='&quot;Popeşti&quot;' value='47.244048873827971' />
                <semantic-value key='&quot;Răbăgani&quot;' value='46.747711855046788' />
                <semantic-value key='&quot;Salonta&quot;' value='46.812299527826227' />
                <semantic-value key='&quot;Sălacea&quot;' value='47.46645083348217' />
                <semantic-value key='&quot;Sârbi&quot;' value='47.189644306750843' />
                <semantic-value key='&quot;Sînmartin&quot;' value='47.010149459456777' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='47.070410205029518' />
                <semantic-value key='&quot;Tarcea&quot;' value='47.452341389938539' />
                <semantic-value key='&quot;Tăuteu&quot;' value='47.268472456732511' />
                <semantic-value key='&quot;Tileagd&quot;' value='47.061713061598191' />
                <semantic-value key='&quot;Tinca&quot;' value='46.780927898106654' />
                <semantic-value key='&quot;Toboliu&quot;' value='47.040122729703185' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='47.518811085710738' />
                <semantic-value key='&quot;Vaşcău&quot;' value='46.479094899148038' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Abram&quot;' value='22.371435268423383' />
                <semantic-value key='&quot;Aleşd&quot;' value='22.39550103671635' />
                <semantic-value key='&quot;Aştileu&quot;' value='22.391724385495198' />
                <semantic-value key='&quot;Auşeu&quot;' value='22.496759842472652' />
                <semantic-value key='&quot;Balc&quot;' value='22.52323425302006' />
                <semantic-value key='&quot;Beiuş&quot;' value='22.353272322793895' />
                <semantic-value key='&quot;Biharia&quot;' value='21.924354879031306' />
                <semantic-value key='&quot;Borş&quot;' value='21.815135481758329' />
                <semantic-value key='&quot;Bratca&quot;' value='22.601969045817615' />
                <semantic-value key='&quot;Bunteşti&quot;' value='22.469915025547657' />
                <semantic-value key='&quot;Chişlaz&quot;' value='22.230635690443084' />
                <semantic-value key='&quot;Cîmpani&quot;' value='22.516951366544845' />
                <semantic-value key='&quot;Copăcel&quot;' value='22.165775316295939' />
                <semantic-value key='&quot;Criștioru de Jos&quot;' value='22.608287011942949' />
                <semantic-value key='&quot;Crişului&quot;' value='22.514741256919692' />
                <semantic-value key='&quot;Derna&quot;' value='22.304177202309578' />
                <semantic-value key='&quot;Diosig&quot;' value='22.002202732452144' />
                <semantic-value key='&quot;Dobreşti&quot;' value='22.27973567471928' />
                <semantic-value key='&quot;Gepiu&quot;' value='21.790252728667458' />
                <semantic-value key='&quot;Girișu de Criş&quot;' value='21.764386792476628' />
                <semantic-value key='&quot;Hidișelu de Sus&quot;' value='22.044646514833417' />
                <semantic-value key='&quot;Holod&quot;' value='22.118546954223969' />
                <semantic-value key='&quot;Iancu&quot;' value='21.52822482727683' />
                <semantic-value key='&quot;Ineu&quot;' value='22.117322568220715' />
                <semantic-value key='&quot;Lăzăreni&quot;' value='22.058958953064931' />
                <semantic-value key='&quot;Lugașu de Jos&quot;' value='22.347671924283848' />
                <semantic-value key='&quot;Marghita&quot;' value='22.332647198056307' />
                <semantic-value key='&quot;Nojorid&quot;' value='21.882941645268179' />
                <semantic-value key='&quot;Oradea&quot;' value='21.914100000000001' />
                <semantic-value key='&quot;Oşorhei&quot;' value='22.030184199860969' />
                <semantic-value key='&quot;Paleu&quot;' value='21.957657241923908' />
                <semantic-value key='&quot;Pomezeu&quot;' value='22.289156826335869' />
                <semantic-value key='&quot;Popeşti&quot;' value='22.412885144779743' />
                <semantic-value key='&quot;Răbăgani&quot;' value='22.228903643309319' />
                <semantic-value key='&quot;Salonta&quot;' value='21.653717886574007' />
                <semantic-value key='&quot;Sălacea&quot;' value='22.291817473550712' />
                <semantic-value key='&quot;Sârbi&quot;' value='22.116636927955813' />
                <semantic-value key='&quot;Sînmartin&quot;' value='21.964735474158836' />
                <semantic-value key='&quot;Sîntandrei&quot;' value='21.851624044515415' />
                <semantic-value key='&quot;Tarcea&quot;' value='22.175061346040415' />
                <semantic-value key='&quot;Tăuteu&quot;' value='22.332914298395394' />
                <semantic-value key='&quot;Tileagd&quot;' value='22.204356019624637' />
                <semantic-value key='&quot;Tinca&quot;' value='21.933860591276442' />
                <semantic-value key='&quot;Toboliu&quot;' value='21.716784168650495' />
                <semantic-value key='&quot;Valea lui Mihai&quot;' value='22.140505885182119' />
                <semantic-value key='&quot;Vaşcău&quot;' value='22.476267602727386' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Venituri_totale]' role='measure' type='quantitative' />
            <column-instance column='[An]' derivation='None' name='[none:An:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Localitate]' derivation='None' name='[none:Localitate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Venituri_totale]' derivation='Sum' name='[sum:Venituri_totale:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_BAAA0928B4F24067AEAFFF1C162BFF66]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[An]' />
              <groupfilter function='level-members' level='[Localitate]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]'>
            <groupfilter function='level-members' level='[Localitate]' user:ui-action-filter='[Action2_FCC616E428BE425BB558C36C4F5B70C8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' member-value='#2020-01-01 00:00:00#' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (Localitate)]</column>
            <column>[federated.1lvigrw0f78s7013hg1oh1s00cti].[Action (An,Localitate)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</rows>
        <cols>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</cols>
      </table>
      <simple-id uuid='{42826995-2777-4A3E-A46E-5AA42A0EB7AF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='87266' x='483' y='940'>
              <zone h='52407' id='3' name='Venituri_totale_pe_localitate_pe_an' w='20286' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52407' id='9' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' w='37195' x='20769' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45713' id='12' name='Profit_raportat_la_nr_mediu_angajati' w='30399' x='483' y='53347'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52407' id='17' name='Harta_in_fct_de_media_profitului_net' w='29785' x='57964' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45713' id='19' name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' w='36456' x='30882' y='53347'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45713' id='70' name='Cluster' w='20411' x='67338' y='53347'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='195' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11768' x='87749' y='940'>
              <zone h='8578' id='8' name='Venituri_totale_pe_localitate_pe_an' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' type-v2='color' w='11768' x='87749' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30670' id='11' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' type-v2='color' w='11768' x='87749' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='13' name='Profit_raportat_la_nr_mediu_angajati' pane-specification-id='4' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577503428610:nk]' type-v2='color' w='11768' x='87749' y='40188'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='14' name='Profit_raportat_la_nr_mediu_angajati' pane-specification-id='5' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' type-v2='color' w='11768' x='87749' y='48649'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18331' id='18' name='Harta_in_fct_de_media_profitului_net' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' type-v2='size' w='11768' x='87749' y='57110'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='71' name='Cluster' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]' type-v2='color' w='11768' x='87749' y='75441'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='111' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='110' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='52407' id='3' is-fixed='true' name='Venituri_totale_pe_localitate_pe_an' w='20286' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='8' name='Venituri_totale_pe_localitate_pe_an' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' type-v2='color' w='11768' x='87749' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52407' id='9' is-fixed='true' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' w='37195' x='20769' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30670' id='11' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' type-v2='color' w='11768' x='87749' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52407' id='17' is-fixed='true' name='Harta_in_fct_de_media_profitului_net' w='29785' x='57964' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18331' id='18' name='Harta_in_fct_de_media_profitului_net' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' type-v2='size' w='11768' x='87749' y='57110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45713' id='12' is-fixed='true' name='Profit_raportat_la_nr_mediu_angajati' w='30399' x='483' y='53347'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='13' name='Profit_raportat_la_nr_mediu_angajati' pane-specification-id='4' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577503428610:nk]' type-v2='color' w='11768' x='87749' y='40188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='14' name='Profit_raportat_la_nr_mediu_angajati' pane-specification-id='5' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' type-v2='color' w='11768' x='87749' y='48649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45713' id='19' is-fixed='true' name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' w='36456' x='30882' y='53347'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45713' id='70' is-fixed='true' name='Cluster' w='20411' x='67338' y='53347'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='71' name='Cluster' pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]' type-v2='color' w='11768' x='87749' y='75441'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6A31602F-8932-4100-8F47-D6E1196F2F7C}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Se rentează o afacere în domeniul întreținerii autovehiculelor în județul Bihor?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='7884' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='8714' />
            <zone h='79979' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='19191'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Profitul raportat la numărul mediu de angajați' captured-sheet='Profit_raportat_la_nr_mediu_angajati' id='7' />
                  <story-point caption='Evoluția în timp a profitului pe Oradea și zona metropolitană(Motorul economic al județului)' captured-sheet='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' id='6' />
                  <story-point caption='Există clustere identificabile în județ?' captured-sheet='Cluster' id='5' />
                  <story-point caption='Harta județului în funcție de media profitului pe localitate' captured-sheet='Harta_in_fct_de_media_profitului_net' id='4' />
                  <story-point caption='Privire de ansamblu asupra veniturilor pe localitate din județul Bihor' captured-sheet='Venituri_totale_pe_localitate_pe_an' id='3' />
                  <story-point caption='Care sunt cele mai profitabile localități din Bihor când vine vorba de zona de întreținere de autovehicule' captured-sheet='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' id='2' />
                  <story-point caption='Există in județul Bihor localitați cu media profitului anual peste 40k RON?' captured-sheet='Profitul_raportat_la_cifra_de_afaceri_pe_municipii&amp;zona_metropolitana' id='1' />
                  <story-point caption='Analiza de trend a profitului și pierderii nete' captured-sheet='Analiza de trend' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{6293B1E9-EFB3-4157-B74E-637CC2E95E4D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Numar_mediu_angajati_Oradea'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C101E65-4567-4B1C-9C48-87A557C9CE92}' />
    </window>
    <window class='worksheet' name='Profit_in_fct_de_nr_mediu_angajati'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Numar_mediu_angajati:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49676827-7CA2-4A81-BCB5-CB7854602564}' />
    </window>
    <window class='worksheet' name='Raport_pierdere_neta_profit_net_municipii_pe_an'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[attr:Localitate:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Tara:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC9D508E-C2A1-4A79-AFFA-F5C579891412}' />
    </window>
    <window class='worksheet' name='Venituri_totale_pe_localitate_pe_an'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Venituri_totale:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2485D2B-E172-497D-AAA9-809BCE394251}' />
    </window>
    <window class='worksheet' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5230B3C3-99FC-4DF9-AE32-D239CEDD2C67}' />
    </window>
    <window class='worksheet' name='Profitul_raportat_la_cifra_de_afaceri_pe_municipii&amp;zona_metropolitana'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577500962816:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13A03174-D10D-4B03-8E24-189C27920ED7}' />
    </window>
    <window class='worksheet' name='Harta_in_fct_de_media_profitului_net'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[avg:Profit_net:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[io:Localitate Set:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate (copy)_91479383143292928:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Tara:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[sum:Profit_net:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A83D5678-FD6E-4450-944D-273C43B6130F}' />
    </window>
    <window class='worksheet' name='Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:CUI:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F357045E-2F18-4B78-8A87-AD3D1AAC860A}' />
    </window>
    <window class='worksheet' name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An (copy)_217580176721256448:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate (copy)_91479383143292928:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79B60BE2-EDC2-438F-B339-70D9EFAECB29}' />
    </window>
    <window class='worksheet' name='Profit_raportat_la_nr_mediu_angajati'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577503428610:nk]' type='color' />
            <card pane-specification-id='5' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Denumire:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577503428610:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BE30C71-B6E0-430D-813A-C528917D6774}' />
    </window>
    <window class='worksheet' name='Analiza de trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:An:ok]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Judet:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]</field>
            <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[yr:An:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{411D8A05-59AB-49B9-9921-B460AEB3843B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Cluster'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:AdhocCluster:2:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Harta_in_fct_de_media_profitului_net'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit_raportat_la_nr_mediu_angajati'>
          <highlight>
            <color-one-way>
              <field>[federated.1lvigrw0f78s7013hg1oh1s00cti].[usr:Calculation_156781577502154753:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate'>
          <zoom type='fit-width' />
          <highlight field='[federated.1lvigrw0f78s7013hg1oh1s00cti].[none:Localitate:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Venituri_totale_pe_localitate_pe_an' />
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{8C12EAD1-C392-4699-B87E-3C56CCAD5456}' />
    </window>
    <window class='dashboard' name='Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{567B382D-1065-44F7-A4C0-083208F9D4DA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analiza de trend' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Cluster' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Evoluția profitului în cei 4 ani pentru Oradea &amp; zona metropolitană' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Harta_in_fct_de_media_profitului_net' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='167' name='Numar_mediu_angajati_Oradea' width='192'>
      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
      /g9tsr5NNkN4zgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit_in_fct_de_nr_mediu_angajati' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Profit_raportat_la_nr_mediu_angajati' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profitul_raportat_la_cifra_de_afaceri_pe_municipii&amp;zona_metropolitana' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profiturile_intre_2018-2021_ale_firmelor_din_Bihor_grupate_pe_localitate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Raport_pierdere_neta_profit_net_municipii_pe_an' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
      +fg/l319x8MOK1gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Venituri_totale_pe_localitate_pe_an' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
